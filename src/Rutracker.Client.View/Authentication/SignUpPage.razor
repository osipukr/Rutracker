@layout AuthLayout

@page "/signup"

@inject IAccountService AccountService
@inject IToastService ToastService
@inject ScriptHelpers ScriptHelpers

<EditForm Model="@RegisterModel"
          OnValidSubmit="@SignUpEventHandle"
          Context="formContext"
          class="auth-form-root">

    <DataAnnotationsValidator />

    <Typography Class="auth-form-title" Variant="TypographyVariant.H2">
        Create new account
    </Typography>

    <Typography Color="@Color.TextSecondary" GutterBottom>
        Use your email to create new account
    </Typography>

    <FormControl class="form-constrol-root">
        <TextField Class="auth-form-text-field"
                   FullWidth
                   Label="User Name"
                   Name="userName"
                   Value="@RegisterModel.UserName"
                   OnChange="@UserNameChangeEventHandler"
                   Type="text"
                   Variant="@TextFieldVariant.Outlined" />

        <ValidationMessage For="@(() => RegisterModel.UserName)" />
    </FormControl>

    <FormControl class="form-constrol-root">
        <TextField Class="auth-form-text-field"
                   FullWidth
                   Label="Email address"
                   Name="email"
                   Value="@RegisterModel.Email"
                   OnChange="@EmailChangeEventHandler"
                   Type="email"
                   Variant="@TextFieldVariant.Outlined" />

        <ValidationMessage For="@(() => RegisterModel.Email)" />
    </FormControl>

    <FormControl class="form-constrol-root">
        <TextField Class="auth-form-text-field"
                   FullWidth
                   Label="Password"
                   Name="password"
                   Value="@RegisterModel.Password"
                   OnChange="@PasswordChangeEventHandler"
                   Type="password"
                   Variant="@TextFieldVariant.Outlined" />

        <ValidationMessage For="@(() => RegisterModel.Password)" />
    </FormControl>

    <FormControl class="form-constrol-root">
        <TextField Class="auth-form-text-field"
                   FullWidth
                   Label="Confirm Password"
                   Name="confirmPassword"
                   Value="@RegisterModel.ConfirmPassword"
                   OnChange="@ConfirmPasswordChangeEventHandler"
                   Type="password"
                   Variant="@TextFieldVariant.Outlined" />

        <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
    </FormControl>

    <Button Class="auth-form-submit-button"
            Color="@Color.Primary"
            FullWidth
            Size="@Size.Large"
            Type="@ButtonType.Submit"
            Variant="@ButtonVariant.Contained">
        Sign up now
    </Button>

    <Typography Color="@Color.TextSecondary" Variant="@TypographyVariant.Body1">
        Have an account?

        <Link Href="@Constants.Page.SignIn">
        Sign in
        </Link>
    </Typography>
</EditForm>

@code
{
    private RegisterView RegisterModel = new RegisterView();

    private void UserNameChangeEventHandler(ChangeEventArgs e)
    {
        RegisterModel.UserName = e.Value.ToString();

        StateHasChanged();
    }

    private void EmailChangeEventHandler(ChangeEventArgs e)
    {
        RegisterModel.Email = e.Value.ToString();

        StateHasChanged();
    }

    private void PasswordChangeEventHandler(ChangeEventArgs e)
    {
        RegisterModel.Password = e.Value.ToString();

        StateHasChanged();
    }

    private void ConfirmPasswordChangeEventHandler(ChangeEventArgs e)
    {
        RegisterModel.ConfirmPassword = e.Value.ToString();

        StateHasChanged();
    }

    private async Task SignUpEventHandle()
    {
        try
        {
            await AccountService.Register(RegisterModel);
            await ScriptHelpers.GoBackAsync();
        }
        catch (Exception exception)
        {
            ToastService.ShowError(exception.Message, "Sign Up");
        }
    }
}