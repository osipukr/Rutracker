@layout AuthLayout

@page "/signin"

@inject IAccountService AccountService
@inject IMatToaster  ToastService
@inject NavigationManager NavigationManager

<EditForm Model="@LoginModel"
          OnValidSubmit="@LoginAsync"
          Context="formContext"
          class="auth-form-root">

    <DataAnnotationsValidator />

    <Typography Class="auth-form-title" Variant="TypographyVariant.H2">
        Sign in
    </Typography>


    <FormControl class="form-constrol-root">
        <MatTextField @bind-Value="@LoginModel.UserName"
                      Label="User Name"
                      Icon="@MatIconNames.Person"
                      IconTrailing="true"
                      FullWidth="true"
                      Outlined="true"
                      Required="true" />

        <ValidationMessage For="@(() => LoginModel.UserName)" />
    </FormControl>

    <FormControl class="form-constrol-root">
        <MatTextField @bind-Value="@LoginModel.Password"
                      Label="Password"
                      Icon="@MatIconNames.Lock_open"
                      IconTrailing="true"
                      FullWidth="true"
                      Outlined="true"
                      Required="true"
                      Type="password" />

        <ValidationMessage For="@(() => LoginModel.Password)" />
    </FormControl>


    <div class="auth-form-remember-field">
        <MatCheckbox @bind-Value="@LoginModel.RememberMe" class="auth-form-remember-checkbox">
            <Typography Color="@Color.TextSecondary" Variant="@TypographyVariant.Body1">
                Remember me?
            </Typography>
        </MatCheckbox>
    </div>

    <Button Class="auth-form-submit-button"
            Color="@Color.Primary"
            FullWidth
            Size="@Size.Large"
            Type="@ButtonType.Submit"
            Variant="@ButtonVariant.Contained">
        Sign in now
    </Button>

    <Typography Color="@Color.TextSecondary" Variant="@TypographyVariant.Body1">
        Don't have an account?

        <Link Href="@Constants.Page.SignUp">
        Sign up
        </Link>
    </Typography>
</EditForm>

@code
{
    private LoginView LoginModel = new LoginView();

    private async Task LoginAsync()
    {
        try
        {
            await AccountService.Login(LoginModel);
            
            NavigationManager.NavigateTo(Constants.Page.Home);
        }
        catch (Exception exception)
        {
            ToastService.Add(exception.Message, MatToastType.Danger, "Sign In");
        }
    }
}