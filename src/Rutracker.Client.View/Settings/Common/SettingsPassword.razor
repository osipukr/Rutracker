@inject IUserService UserService
@inject IMatToaster MatToaster

<Card Class="Settings-Password-Root">
    <EditForm Model="@_passwordUpdate"
              OnValidSubmit="@UpdateClicked"
              Context="formContext"
              autocomplete="on">

        <DataAnnotationsValidator />

        <CardHeader Class="px-4 py-3" Subheader="Update password" Title="Password" />

        <Divider />

        <CardContent Class="p-4">
            <FormControl Class="Form-Cotrol">
                <MatTextField FullWidth="true"
                              Outlined="true"
                              Type="password"
                              Label="Old Password"
                              Required="true"
                              @bind-Value="@_passwordUpdate.OldPassword" />

                <ValidationMessage For="@(() => _passwordUpdate.OldPassword)" />
            </FormControl>

            <FormControl Class="Form-Cotrol">
                <MatTextField FullWidth="true"
                              Outlined="true"
                              Type="password"
                              Label="New Password"
                              Required="true"
                              @bind-Value="@_passwordUpdate.NewPassword" />

                <ValidationMessage For="@(() => _passwordUpdate.NewPassword)" />
            </FormControl>

            <FormControl Class="Form-Cotrol">
                <MatTextField FullWidth="true"
                              Outlined="true"
                              Type="password"
                              Label="Confirmation Password"
                              Required="true"
                              @bind-Value="@_passwordUpdate.ConfirmNewPassword" />

                <ValidationMessage For="@(() => _passwordUpdate.ConfirmNewPassword)" />
            </FormControl>
        </CardContent>

        <Divider />

        <CardActions Class="px-4 py-3">
            <Button Color="@Color.Primary"
                    Variant="@ButtonVariant.Contained"
                    Type="@ButtonType.Submit">
                Update
            </Button>
        </CardActions>
    </EditForm>
</Card>

@code
{
    private readonly PasswordUpdateView _passwordUpdate = new PasswordUpdateView();

    private async Task UpdateClicked()
    {
        try
        {
            await UserService.ChangePasswordAsync(_passwordUpdate);

            Reset();

            MatToaster.Add("Password was successfully changed.", MatToastType.Success, "Password updating");
        }
        catch (Exception exception)
        {
            MatToaster.Add(exception.Message, MatToastType.Danger, "Password updating");
        }
    }

    private void Reset()
    {
        _passwordUpdate.OldPassword = null;
        _passwordUpdate.NewPassword = null;
        _passwordUpdate.ConfirmNewPassword = null;
    }
}