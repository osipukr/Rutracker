<EditForm Model="@_commentUpdate" OnValidSubmit="@UpdateClicked">
    <DataAnnotationsValidator />

    <div class="comment-post">
        <MatTextField @bind-Value="@_commentUpdate.Text"
                       TextArea="true"
                       Dense="true"
                       FullWidth="true"
                       Required="true"
                       ValidationDisabled="true"
                       InputStyle="height: 50px; min-height: 50px; max-height: 150px;" />
    </div>

    <div class="d-flex flex-row-reverse mt-2">
        <MatButton Label="Update" type="submit" />
        <MatButton OnClick="@CancelClicked" Label="Cancel" />
    </div>
</EditForm>

@code
{
    [Parameter] public string Text { get; set; }
    [Parameter] public EventCallback<CommentUpdateView> OnUpdate { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private readonly CommentUpdateView _commentUpdate  = new CommentUpdateView();

    protected override void OnInitialized()
    {
        _commentUpdate.Text = Text;
    }

    private async Task UpdateClicked()
    {
        if (OnUpdate.HasDelegate)
        {
            await OnUpdate.InvokeAsync(_commentUpdate);
        }
    }

    private async Task CancelClicked()
    {
        if (OnCancel.HasDelegate)
        {
            await OnCancel.InvokeAsync(EventArgs.Empty);
        }
    }
}