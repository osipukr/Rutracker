@typeparam TSearch

@inject IUriHelper UriHelper
@inject ViewSettings ViewSettings

@if (!Search.IsCompleted)
{
    <LoadingBackground>
        <span>Loading torrents, please wait...</span>
    </LoadingBackground>
}
else if (Items == null || Items.Length == 0)
{
    <LoadingBackground ShowLoader="false">
        <span>Sorry, but torrent list is empty...</span>
    </LoadingBackground>
}
else
{
    <div class="mat-layout-grid px-0">
        <div class="mat-layout-grid-inner">
            @foreach (var torrent in Items)
            {
                <div class="mat-layout-grid-cell">
                    <MatRipple class="no-select mat-elevation-z10" Color="@MatRippleColor.Secondary">
                        <MatList TwoLine="true">
                            <MatListItem Href="@UriHelper.ToAbsoluteUri($"torrents/{torrent.Id}").AbsoluteUri">
                                <MatIcon Icon="@MatIconNames.Date_range"></MatIcon>
                                <span>@torrent.Date.ToShortDateString()</span>
                            </MatListItem>

                            <MatListItem>
                                <MatListItemText>
                                    <MatListItemPrimaryText>Size (bytes)</MatListItemPrimaryText>
                                    <MatListItemSecondaryText>@torrent.Size</MatListItemSecondaryText>
                                </MatListItemText>
                            </MatListItem>

                            <MatListItem>
                                <MatListItemText>
                                    <MatListItemPrimaryText>Title</MatListItemPrimaryText>
                                    <MatListItemSecondaryText>@torrent.Title</MatListItemSecondaryText>
                                </MatListItemText>
                            </MatListItem>
                        </MatList>
                    </MatRipple>
                </div>
            }
        </div>
    </div>
}

@functions
{
    [Parameter] TorrentItemViewModel[] Items { get; set; }
    [Parameter] Task<TSearch> Search { get; set; }
}