@typeparam TSearch

@inject ViewSettings ViewSettings

@if (!Search.IsCompleted)
{
    <LoadingBackground>
        <span>Loading torrents, please wait...</span>
    </LoadingBackground>
}
else if (Items.Length == 0)
{
    <LoadingBackground ShowLoader="false">
        <span>Sorry, but torrent list is empty...</span>
    </LoadingBackground>
}
else
{
    <div class="mat-layout-grid px-0">
        <div class="mat-layout-grid-inner">
            @foreach (var torrent in Items)
            {
                <div class="mat-layout-grid-cell">
                    <MatRipple class="mat-ripple no-select mat-elevation-z10" Color="@MatRippleColor.Secondary">
                        <MatCard>
                            <p><MatIcon Icon="date_range"></MatIcon><span>@torrent.Date</span></p>

                            <p>Title: @torrent.Title</p>
                            <p>Size: @torrent.Size</p>
                            <p>Id: @torrent.Id</p>
                        </MatCard>
                    </MatRipple>
                </div>
            }
        </div>
    </div>
}

@functions
{
    [Parameter] TorrentItemViewModel[] Items { get; set; }
    [Parameter] Task<TSearch> Search { get; set; }

    static string TorrentDetailsUri(long id) => $"/torrent/{id}";
}