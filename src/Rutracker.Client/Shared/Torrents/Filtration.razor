@inject IMatToaster MatToaster
@inject AppStateService AppState
@inject ViewSettings ViewSettings

<div class="mat-layout-grid px-0">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
            <EditForm Model="@Model" OnValidSubmit="@OnValidSubmitClicked">
                <DataAnnotationsValidator />

                <MatTextField @bind-Value="@Model.Search"
                              Label="Search"
                              Type="search"
                              FullWidth="true"
                              Icon="@MatIconNames.Search"
                              IconTrailing="true"
                              InputStyle="padding: 20px 48px 6px 16px;" />

                <ValidationMessage For="@(() => Model.Search)" />

                <MatAccordion Multi="true" Class="mt-4">
                    <MatExpansionPanel>
                        <MatExpansionPanelSummary Class="no-select">
                            <MatExpansionPanelHeader Class="w-100" Style="flex-basis: inherit;">
                                Size range
                            </MatExpansionPanelHeader>
                        </MatExpansionPanelSummary>

                        <MatExpansionPanelDetails>
                            <div class="mat-layout-grid-inner py-0">
                                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                    <MatNumeric Label="From" @bind-Value="@Model.SizeFrom" />
                                </div>

                                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                    <MatNumeric Label="To" @bind-Value="@Model.SizeTo" />
                                </div>

                                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                    <ValidationMessage For="@(() => Model.SizeFrom)" />
                                </div>

                                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                    <ValidationMessage For="@(() => Model.SizeTo)" />
                                </div>
                            </div>
                        </MatExpansionPanelDetails>
                    </MatExpansionPanel>

                    <MatExpansionPanel>
                        <MatExpansionPanelSummary Class="no-select">
                            <MatExpansionPanelHeader Class="w-100" Style="flex-basis: inherit;">
                                Forum titles category
                            </MatExpansionPanelHeader>
                        </MatExpansionPanelSummary>

                        <MatExpansionPanelDetails>
                            @if (TitleFacet != null && TitleFacet.FacetItems != null)
                            {
                                <div class="mat-layout-grid-inner p-0 pt-3">
                                    @foreach (var facet in TitleFacet.FacetItems)
                                    {
                                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                            <MatCheckbox @bind-Checked="@facet.IsSelected">
                                                <span>@facet.Value - (Count: @facet.Count)</span>
                                            </MatCheckbox>
                                        </div>
                                    }
                                </div>
                            }
                        </MatExpansionPanelDetails>
                    </MatExpansionPanel>
                </MatAccordion>

                <div class="mat-layout-grid mat-layout-grid-align-right p-0 mt-3">
                    <div class="mat-layout-grid-inner">
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12" style="grid-column-end: none">
                            <MatButton Disabled="@AppState.SearchInProgress"
                                       OnClick="@ResetButtonClicked"
                                       Outlined="true"
                                       Type="reset"
                                       Class="filter-btn"
                                       Label="All" />

                            <MatButton Disabled="@AppState.SearchInProgress"
                                       Type="submit"
                                       Raised="true"
                                       Class="filter-btn"
                                       Label="Apply" />
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code
{
    [Parameter] FiltrationViewModel Model { get; set; }
    [Parameter] EventCallback<FiltrationViewModel> FilterChanged { get; set; }

    int TitleCount => ViewSettings.ForumTitlesCount;
    FacetViewModel<string> TitleFacet { get; set; }

    protected override async Task OnInitAsync() => await LoadTitleFacetsAsync();

    async Task LoadTitleFacetsAsync()
    {
        try
        {
            TitleFacet = await AppState.GetTitleFacetAsync(TitleCount);
        }
        catch (Exception ex)
        {
            MatToaster.Add(ex.Message, MatToastType.Warning, "Titles Load Failed", MatIconNames.Warning);
        }
    }

    void ResetFiltration()
    {
        Model.Search = null;
        Model.SizeFrom = null;
        Model.SizeTo = null;
        Model.SelectedTitleIds = null;

        if (TitleFacet != null && TitleFacet.FacetItems != null)
        {
            foreach (var facet in TitleFacet.FacetItems)
            {
                facet.IsSelected = false;
            }
        }
    }

    void OnSubmitClicked() => Model.SelectedTitleIds = TitleFacet?.FacetItems?.Where(x => x.IsSelected).Select(x => x.Id);

    void ResetButtonClicked()
    {
        ResetFiltration();
        OnValidSubmitClicked();
    }

    void OnValidSubmitClicked() => FilterChanged.InvokeAsync(Model);
}