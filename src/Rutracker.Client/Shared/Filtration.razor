@inject TorrentServiceClient Client

@if (Model != null)
{
    <div>
        <button class="btn btn-primary"
                onclick="@ToggleFiltrationMenu">
            Filtration
        </button>

        <div class="@FiltrationMenuCssClass">
            @if (Model.ForumTitles?.Any() ?? false)
            {
                <div class="card card-body">
                    @foreach (var title in Model.ForumTitles)
                    {
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" onchange="@(args => Checked(title.Key, args.Value))" type="checkbox" />
                                @title.Key
                            </label>
                        </div>
                    }
                </div>
            }

            <div class="card card-body">
                <div class="form-row">
                    <div class="col">
                        <input min="0" bind="@Model.SizeFrom" class="form-control" placeholder="From" type="number" value="@Model.SizeFrom" />
                    </div>

                    <div class="col">
                        <input min="0" bind="@Model.SizeTo" class="form-control" placeholder="To" type="number" value="@Model.SizeTo" />
                    </div>
                </div>
            </div>

            <button class="btn btn-primary" onclick="@ApplyButton">Apply</button>
        </div>
    </div>
}

@functions
{
    [Parameter] protected FiltrationViewModel Model { get; set; }
    [Parameter] protected Action ClickHandler { get; set; }

    private void Checked(string title, object value) => Model.ForumTitles[title] = (bool) value;

    private bool _collapseFiltrationMenu = true;
    private string FiltrationMenuCssClass => _collapseFiltrationMenu ? "collapse" : null;

    private void ToggleFiltrationMenu() => _collapseFiltrationMenu = !_collapseFiltrationMenu;

    private void ApplyButton()
    {
        ToggleFiltrationMenu();
        ClickHandler?.Invoke();
    }

}