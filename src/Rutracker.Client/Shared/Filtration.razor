@*@if (Model != null)
{
    <div class="row mx-0 d-flex flex-column my-2">
        <button class="btn btn-primary"
                onclick="@ToggleFiltrationMenu">
            Filtration
        </button>

        <div class="card mb-2 @FiltrationMenuCssClass">
            @if (Model.ForumTitles?.Any() ?? false)
            {
                <div class="card card-body">
                    @foreach (var key in Model.ForumTitles.Keys)
                    {
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" bind="@Model.ForumTitles[key]" type="checkbox" />
                                @key
                            </label>
                        </div>
                    }
                </div>
            }

            <div class="card card-body">
                <div class="form-row">
                    <div class="col">
                        <input min="0" bind="@Model.SizeFrom" class="form-control" placeholder="Torrent size from" type="number" value="@Model.SizeFrom" />
                    </div>

                    <div class="col">
                        <input min="0" bind="@Model.SizeTo" class="form-control" placeholder="Torrent size to" type="number" value="@Model.SizeTo" />
                    </div>
                </div>
            </div>

            <button class="btn btn-primary" onclick="@ApplyButton">Apply</button>
        </div>
    </div>
}

@functions
{
    [Parameter] protected FiltrationViewModel Model { get; set; }
    [Parameter] protected Action ApplyClickHandler { get; set; }

    private bool _collapseFiltrationMenu = true;
    private string FiltrationMenuCssClass => _collapseFiltrationMenu ? "collapse" : null;

    private void ToggleFiltrationMenu() => _collapseFiltrationMenu = !_collapseFiltrationMenu;

    private void ApplyButton()
    {
        ToggleFiltrationMenu();
        ApplyClickHandler?.Invoke();
    }
}*@