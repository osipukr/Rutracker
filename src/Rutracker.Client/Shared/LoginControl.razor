@inject AppState AppState
@inject IUriHelper UriHelper
@inject IMatToaster MatToaster

<AuthorizeView Context="AuthorizeContext">
    <Authorized>
        <MatTooltip Tooltip="Logout" Wrap="true">
            <MatIconButton Icon="@MatIconNames.Exit_to_app" OnClick="@(async () => await LogoutClicked())" />
        </MatTooltip>
    </Authorized>
    <NotAuthorized>
        <MatTooltip Tooltip="Login" Wrap="true">
            <MatIconButton Icon="@MatIconNames.Account_box" Link="@LoginLink" />
        </MatTooltip>

        <MatTooltip Tooltip="Register" Wrap="true">
            <MatIconButton Icon="@MatIconNames.How_to_reg" Link="@RegisterLink" />
        </MatTooltip>
    </NotAuthorized>
</AuthorizeView>

@code
{
    private const string LoginLink = "/account/login";
    private const string RegisterLink = "/account/register";

    private async Task LogoutClicked()
    {
        try
        {
            await AppState.Logout();

            UriHelper.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            MatToaster.Add(ex.Message, MatToastType.Warning, "Failed logout");
        }
    }
}