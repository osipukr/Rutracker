@page "/torrent/{id:long}"
@inject TorrentServiceClient Client
@inject IUriHelper UriHelper

@if (Model == null)
{
    <Loader />
}
else
{
    <div class="card text-center mb-3">
        <div class="card-header py-3"></div>
        <div class="card-body">
            <button class="btn btn-primary" onclick="@BackToButtonClick">Back to full torrents list</button>
        </div>
        <div class="card-footer text-muted py-3"></div>
    </div>

    @if (Model.TorrentDetailsItem != null)
    {
        var torrent = Model.TorrentDetailsItem;

        <ul class="list-group mb-4 shadow-lg rounded">
            <li class="list-group-item rounded">Id - @torrent.Id</li>
            <li class="list-group-item rounded">Size - @torrent.Size</li>
            <li class="list-group-item rounded">Date - @torrent.Date.ToLongDateString()</li>
            <li class="list-group-item rounded">Title - @torrent.Title</li>
            <li class="list-group-item rounded">Hash - @torrent.Hash</li>
            <li class="list-group-item rounded">Forum title - @torrent.ForumTitle</li>
            <li class="list-group-item rounded">Is deleted - @(torrent.IsDeleted ? "Yes" : "No")</li>

            @if (torrent.Files.Any())
            {
                <li class="list-group-item rounded">
                    <ul class="list-group">
                        @foreach (var file in torrent.Files)
                        {
                            <li class="list-group-item rounded">@file.Name [Size: @file.Size]</li>
                        }
                    </ul>
                </li>
            }

            <li class="list-group-item rounded">@((MarkupString)torrent.Content)</li>
        </ul>
    }
    else
    {
        <p>Torrent not found</p>
    }
}

@functions
{
    [Parameter] protected long Id { get; set; }
    private TorrentViewModel Model { get; set; }

    protected override async Task OnInitAsync() => await LoadAsync();

    private async Task LoadAsync() => Model = await Client.GetTorrentAsync(Id);

    private void BackToButtonClick() => UriHelper.NavigateTo("/torrents");
}