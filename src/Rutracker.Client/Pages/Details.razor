@page "/details/{id:long}"
@inject TorrentServiceClient Client
@inject IUriHelper UriHelper

@if (Model == null)
{
    <div class="d-flex justify-content-center align-items-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="card text-center mb-3">
        <div class="card-header py-3"></div>
        <div class="card-body">
            <button class="btn btn-primary" onclick="@BackToButtonClick">Back to full torrents list</button>
        </div>
        <div class="card-footer text-muted py-3"></div>
    </div>

    <DetailsInfo Model="@Model.TorrentDetailsItem" />
}

@functions
{
    [Parameter] public long Id { get; set; }
    private DetailsViewModel Model { get; set; }

    protected override async Task OnInitAsync() => await LoadAsync();

    protected async Task LoadAsync() => Model = await Client.GetTorrentDetailsAsync(Id);

    protected void BackToButtonClick() => UriHelper.NavigateTo("/torrents");
}