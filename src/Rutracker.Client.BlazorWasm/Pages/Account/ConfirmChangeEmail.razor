@layout LoginLayout
@attribute [Authorize(Policy = Policies.IsUser)]

@inject IUserService UserService

@page "/account/profile/confirmEmail"

@using Microsoft.AspNetCore.WebUtilities

<Page Action="@LoadAction" Errors="@Errors" />

@code
{
    private ConfirmChangeEmailViewModel ConfirmChangeModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);

        ConfirmChangeModel = new ConfirmChangeEmailViewModel
        {
            Email = QueryHelpers.ParseQuery(uri.Query).TryGetValue(nameof(ConfirmChangeEmailViewModel.Email), out var email)
                ? email.FirstOrDefault()
                : null,

            Token = QueryHelpers.ParseQuery(uri.Query).TryGetValue(nameof(ConfirmChangeEmailViewModel.Token), out var token)
                ? token.FirstOrDefault()
                : null
        };

        if (ConfirmChangeModel.Email == null || ConfirmChangeModel.Token == null)
        {
            NavigationManager.NavigateTo(Constants.Path.Home);
        }

        await LoadAsync(ConfirmChangeEmailAsync);

        if (LoadAction == ActionTypes.Succeeded)
        {
            NavigationManager.NavigateTo(Constants.Path.Profile);
        }
    }

    private async Task ConfirmChangeEmailAsync() => await UserService.ConfirmChangeEmailAsync(ConfirmChangeModel);
}