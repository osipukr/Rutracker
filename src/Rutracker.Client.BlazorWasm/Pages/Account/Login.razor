@layout LoginLayout

@inject IAccountService AccountService

@page "/account/login"

<MatCard>
    @if (LoadAction == ActionTypes.Failed)
    {
        <Alert Type="@AlertTypes.Danger">
            @Errors
        </Alert>
    }

    @if (Message != null)
    {
        <Alert Type="@AlertTypes.Success">
            @Message
        </Alert>
    }

    <EditForm Model="@LoginModel" OnValidSubmit="@LoginAsync">
        <DataAnnotationsValidator />

        <div class="form-group">
            <MatTextField @bind-Value="@LoginModel.UserName"
                          Label="User Name"
                          Icon="@MatIconNames.Person"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true" />

            <ValidationMessage For="@(() => LoginModel.UserName)" />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@LoginModel.Password"
                          Label="Password"
                          Icon="@MatIconNames.Lock_open"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true"
                          type="password" />

            <ValidationMessage For="@(() => LoginModel.Password)" />
        </div>

        <div class="form-group text-right">
            <MatCheckbox @bind-Checked="@LoginModel.RememberMe" Label="Remember Me ?" class="filled-in chk-col-blue" />
            <MatButton Label="Login" Raised="true" type="submit" />
        </div>

        <hr />

        <div class="d-flex justify-content-center align-items-center">
            <MatButton Link="@Constants.Path.Register" Label="Register" Outlined="true" />
        </div>
    </EditForm>
</MatCard>

<MatAccordion>
    <MatExpansionPanel @bind-Expanded="@ForgotPasswordToggle">
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Forgot Password?</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>

        <MatExpansionPanelDetails>
            <EditForm Model="@ForgotPasswordModel" OnValidSubmit="@ForgotPassword">
                <div class="form-group">
                    <MatTextField @bind-Value="@ForgotPasswordModel.UserName"
                                  Label="User Name"
                                  Icon="@MatIconNames.Person"
                                  IconTrailing="true"
                                  FullWidth="true"
                                  Required="true" />
                </div>

                <div class="form-group text-right">
                    <MatButton Label="Submit" Raised="true" type="submit" />
                </div>
            </EditForm>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
</MatAccordion>

@code
{
    private LoginViewModel LoginModel { get; set; } = new LoginViewModel();
    private ForgotPasswordViewModel ForgotPasswordModel { get; set; } = new ForgotPasswordViewModel();
    private bool ForgotPasswordToggle { get; set; } = false;
    private string Message { get; set; }

    private async Task LoginAsync()
    {
        await LoadAsync(() => AccountService.Login(LoginModel));

        if (LoadAction == ActionTypes.Succeeded)
        {
            NavigationManager.NavigateTo(Constants.Path.Home);
        }
    }

    private async Task ForgotPassword()
    {
        Message = null;
        StateHasChanged();

        await LoadAsync(() => AccountService.ForgotPassword(ForgotPasswordModel));

        if (LoadAction == ActionTypes.Succeeded)
        {
            ForgotPasswordModel.UserName = null;
            ForgotPasswordToggle = false;
            Message = "To complete reset password, check the email.";
        }
    }
}