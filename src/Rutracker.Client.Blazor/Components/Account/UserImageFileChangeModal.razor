@using global::Blazor.FileReader

@inject IModalService ModalService
@inject IFileReaderService FileReaderService

<div class="form">
    <div class="form-group">
        Select image from computer: <input type="file" accept="image/*" @ref="_inputTypeFileElement" />
    </div>

    <div class="d-flex flex-row-reverse mt-4">
        <MatButton OnClick="@UpdateClicked" Label="Update" />
        <MatButton OnClick="@ClearClicked" Label="Clear" />
        <MatButton OnClick="@CancelClicked" Label="Cancel" />
    </div>
</div>

@code
{
    private ChangeImageFileViewModel ChangeImageModel { get; set; }
    private ElementReference _inputTypeFileElement;

    private async Task ReadFileAsync()
    {
        var file = (await FileReaderService.CreateReference(_inputTypeFileElement).EnumerateFilesAsync()).FirstOrDefault();

        if (file == null)
        {
            return;
        }

        var fileInfo = await file.ReadFileInfoAsync();

        if (fileInfo.Size > Constants.File.MaxImageSize)
        {
            throw new Exception("File size too large.");
        }

        var stream = await file.CreateMemoryStreamAsync();

        ChangeImageModel = new ChangeImageFileViewModel
        {
            Stream = stream,
            MimeType = fileInfo.Type
        };
    }

    private async Task UpdateClicked()
    {
        await ReadFileAsync();

        ModalService.Close(ModalResult.Ok(ChangeImageModel));
    }

    private async Task ClearClicked() => await FileReaderService.CreateReference(_inputTypeFileElement).ClearValue();
    private void CancelClicked() => ModalService.Cancel();
}