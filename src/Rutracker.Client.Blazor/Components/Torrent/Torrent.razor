<MatCard Class="no-select mat-elevation-z5">
    <MatCardContent>
        <MatCardMedia Wide="true" ImageUrl="https://material-components.github.io/material-components-web-catalog/static/media/photos/3x2/2.jpg" />

        <div class="p-1">
            <MatHeadline6 class="m-0">@Model.Name</MatHeadline6>
        </div>

        <div class="p-2 mt-3">
            <MatBody2 class="m-0">@($"Create at: {Model.CreatedAt.ToShortDateString()}")</MatBody2>
            <MatBody2 class="m-0">@($"Size: {ConvertBytesToMegabytes(Model.Size):F3} Mb")</MatBody2>
        </div>
    </MatCardContent>

    <MatCardActions>
        <MatCardActionButtons>
            <MatButton Link="@GetTorrentDetailsLink(Model.Id)" Label="Details" />
        </MatCardActionButtons>

        <MatCardActionIcons>
            <div class="m-0 p-0 d-flex justify-content-center align-items-center">
                @Model.CommentsCount
                <MatIconButton Link="@GetCommentsLink(Model.Id)"
                               Icon="@MatIconNames.Comment"
                               class="ml-1" />
            </div>
        </MatCardActionIcons>
    </MatCardActions>
</MatCard>

@code 
{
    [Parameter] public TorrentViewModel Model { get; set; }

    private static string GetTorrentDetailsLink(int id) => string.Format(Constants.Path.Torrent, id.ToString());
    private static string GetCommentsLink(int id) => $"{GetTorrentDetailsLink(id)}#comments";
    private static double ConvertBytesToMegabytes(long bytes) => bytes / 1024f / 1024f;
}