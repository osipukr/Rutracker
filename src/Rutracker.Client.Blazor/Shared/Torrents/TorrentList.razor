@inject AppState AppState

@if (AppState.SearchInProgress)
{
    <LoadingBackground>
        <span>Loading torrents, please wait...</span>
    </LoadingBackground>
}
else if (Items == null || Items.Length == 0)
{
    <LoadingBackground ShowLoader="false">
        <span>Sorry, but torrent list is empty...</span>
    </LoadingBackground>
}
else
{
    <div class="mat-layout-grid px-0">
        <div class="mat-layout-grid-inner">
            @foreach (var torrent in Items)
            {
                <div class="mat-layout-grid-cell">
                    <MatRipple class="no-select mat-elevation-z5" Color="@MatRippleColor.Secondary">
                        <MatList TwoLine="true">
                            <MatListItem Href="@GetTorrentDetailsLink(torrent.Id)">
                                <MatIcon Icon="@MatIconNames.Date_range" Class="pr-2" />
                                <span class="mat-button font-weight-bold">@torrent.Date.ToShortDateString()</span>
                            </MatListItem>

                            <MatListItem>
                                <MatListItemText>
                                    <MatListItemPrimaryText>Size (bytes)</MatListItemPrimaryText>
                                    <MatListItemSecondaryText>@torrent.Size</MatListItemSecondaryText>
                                </MatListItemText>
                            </MatListItem>

                            <MatListItem>
                                <MatListItemText>
                                    <MatListItemPrimaryText>Title</MatListItemPrimaryText>
                                    <MatListItemSecondaryText>@torrent.Title</MatListItemSecondaryText>
                                </MatListItemText>
                            </MatListItem>
                        </MatList>
                    </MatRipple>
                </div>
            }
        </div>
    </div>
}

@code
{
    [Parameter] private TorrentViewModel[] Items { get; set; }

    private static string GetTorrentDetailsLink(long id) => string.Format(Constants.Path.Torrent, id.ToString());
}