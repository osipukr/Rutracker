@inject IModalService ModalService

<EditForm Model="@Subcategory" OnValidSubmit="@UpdateClicked">
    <DataAnnotationsValidator />

    <div class="form-group">
        <MatTextField @bind-Value="@Subcategory.Name"
                       Label="Name"
                       Icon="@MatIconNames.Create"
                       IconTrailing="true"
                       FullWidth="true"
                       Required="true" />

        <ValidationMessage For="@(() => Subcategory.Name)" />
    </div>

    <div class="form-group mb-0 mt-4 d-flex justify-content-end">
        <MatButton Label="Cancel" OnClick="@CancelClicked" />
        <MatButton Label="Update" Type="submit" />
    </div>
</EditForm>

@code
{
    [CascadingParameter] private ModalParameters Parameters { get; set; }

    private SubcategoryUpdateViewModel Subcategory { get; set; }

    protected override void OnInit() => Subcategory = Parameters.Get<SubcategoryUpdateViewModel>(nameof(SubcategoryUpdateViewModel));

    private void UpdateClicked() => ModalService.Close(ModalResult.Ok(Subcategory));
    private void CancelClicked() => ModalService.Cancel();
}