@inject IModalService ModalService

<MatTab>
    <LabelContent>Personal info</LabelContent>
    <ChildContent>
        <div class="form-group">
            <MatTextField Value="@UserModel.UserName"
                          Label="User Name"
                          Icon="@MatIconNames.Person"
                          IconTrailing="true"
                          FullWidth="true"
                          ReadOnly="true" />
        </div>

        <div class="form-group">
            <MatTextField Value="@UserModel.Email"
                          Label="User Name"
                          Icon="@MatIconNames.Mail_outline"
                          IconTrailing="true"
                          FullWidth="true"
                          ReadOnly="true" />
        </div>

        <div class="form-group">
            <MatTextField Value="@UserModel.FirstName" Label="User Name" FullWidth="true" ReadOnly="true" />
        </div>

        <div class="form-group">
            <MatTextField Value="@UserModel.LastName" Label="User Name" FullWidth="true" ReadOnly="true" />
        </div>

        <div class="form-group mt-4 d-flex justify-content-end">
            <MatButton OnClick="@EditUserClicked" Raised="true" Label="Edit profile" Class="mx-2" />
        </div>
    </ChildContent>
</MatTab>

@code
{
    [Parameter] private UserViewModel UserModel { get; set; }
    [Parameter] private EventCallback<EditUserViewModel> OnUpdateClick { get; set; }

    private void EditUserClicked()
    {
        var parameters = new ModalParameters();

        parameters.Add(nameof(EditUserViewModel), new EditUserViewModel
        {
            Email = UserModel.Email,
            FirstName = UserModel.FirstName,
            LastName = UserModel.LastName,
            ImageUrl = UserModel.ImageUrl
        });

        ModalService.OnClose += ModalClosed;

        ModalService.Show("Edit profile", typeof(EditProfile), parameters);
    }

    private async void ModalClosed(ModalResult result)
    {
        if (!result.Cancelled && result.Data is EditUserViewModel model)
        {
            await OnUpdateClick.InvokeAsync(model);
        }

        ModalService.OnClose -= ModalClosed;
    }
}