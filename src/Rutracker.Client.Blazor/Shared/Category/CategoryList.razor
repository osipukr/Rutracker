<h1 class="my-3">Categories list</h1>

<MatAccordion Multi="true">
    @foreach (var category in Items)
    {
        <MatExpansionPanel>
            <MatExpansionPanelSummary Class="no-select">
                <MatExpansionPanelHeader>
                    <div class="m-0 d-flex justify-content-between align-items-center">
                        <a class="text-dark" href="@CategoryDetailsLink(category.Id)" title="Category name">
                            @category.Name (@category.Subcategories.Length)
                        </a>

                        <MatIconButton Icon="@MatIconNames.Delete" OnClick="@(_ => Deleted(category))" />
                    </div>
                </MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>
                @if (category.Subcategories != null)
                {
                    foreach (var subcategory in category.Subcategories)
                    {
                        <p class="d-flex justify-content-between align-items-center">
                            <span title="Subcategory name">@subcategory.Name</span>
                            <MatChip Label="@subcategory.TorrentsCount.ToString()" title="Torrents count" />
                        </p>
                    }
                }
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    }
</MatAccordion>

@code
{
    [Parameter] private IEnumerable<CategoryViewModel> Items { get; set; }
    [Parameter] private EventCallback<CategoryViewModel> DeleteClicked { get; set; }

    private async Task Deleted(CategoryViewModel model) => await DeleteClicked.InvokeAsync(model);

    private static string CategoryDetailsLink(int id) => string.Format(Constants.Path.Category, id.ToString());
}
