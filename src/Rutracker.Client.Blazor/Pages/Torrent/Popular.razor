@inject ViewSettings ViewSettings
@inject ITorrentService TorrentService
@inject IMatToaster MatToaster

@page "/torrents/popular"

@if (Torrents == null)
{
    <LoadingBackground>
        <span>Loading page model, please wait...</span>
    </LoadingBackground>
}
else if (!Torrents.Any())
{
    <LoadingBackground ShowLoader="false">
        <span>Sorry, but torrent list is empty...</span>
    </LoadingBackground>
}
else
{
    <TorrentList Items="@Torrents" />
}

@code
{
    private IEnumerable<TorrentViewModel> Torrents { get; set; }
    private int Count => ViewSettings.PopularTorrentsCount;

    protected override async Task OnInitializedAsync() => await LoadTorrentsAsync();

    private async Task LoadTorrentsAsync()
    {
        try
        {
            Torrents = await TorrentService.PopularTorrentsAsync(Count);
        }
        catch (Exception ex)
        {
            MatToaster.Add(ex.Message, MatToastType.Warning);
        }
    }
}