@layout LoginLayout
@attribute [Authorize]

@inject IAccountService AccountService

@page "/account/logout"

@if (LoadResult == PageActions.InProgress)
{
    <LoadingBackground>
        <span>You are logged out of your account, please wait..</span>
    </LoadingBackground>
}
else if (LoadResult == PageActions.Failed)
{
    <Alert Type="@AlertTypes.Danger">
        @Errors
    </Alert>

    <div class="d-flex justify-content-center">
        <MatButton Link="@Constants.Path.Login" Label="Login" />
        <MatButton Link="@Constants.Path.Register" Label="Register" />
        <MatButton Link="@Constants.Path.Home" Label="Home" />
    </div>
}

@code
{
    protected override async Task OnInitializedAsync() => await LogoutAsync();

    private async Task LogoutAsync()
    {
        await LoadAsync(() => AccountService.Logout());

        if (LoadResult == PageActions.Succeeded)
        {
            NavigationManager.NavigateTo(Constants.Path.Home);
        }
    }
}