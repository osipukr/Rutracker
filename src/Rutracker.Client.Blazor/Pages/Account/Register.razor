@layout LoginLayout

@inject IAccountService AccountService

@page "/account/register"

<MatCard>
    @if (LoadAction == ActionTypes.Succeeded)
    {
        <Alert Type="@AlertTypes.Success">To complete registration, check the email.</Alert>
    }
    else if (LoadAction == ActionTypes.Failed)
    {
        <Alert Type="@AlertTypes.Danger">@Errors</Alert>
    }

    <EditForm Model="@RegisterModel" OnValidSubmit="@RegisterAsync">
        <DataAnnotationsValidator />

        <div class="form-group">
            <MatTextField @bind-Value="@RegisterModel.UserName"
                          Label="User Name"
                          Icon="@MatIconNames.Person"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true" />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@RegisterModel.Email"
                          Label="Email"
                          Icon="@MatIconNames.Mail_outline"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true" />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@RegisterModel.Password"
                          Label="Password"
                          Icon="@MatIconNames.Lock_open"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true"
                          type="password" />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@RegisterModel.ConfirmPassword"
                          Label="Password Confirmation"
                          Icon="@MatIconNames.Lock_open"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true"
                          type="password" />
        </div>

        <div class="d-flex flex-row-reverse my-3">
            <MatButton Label="Create account" Raised="true" type="submit" />
        </div>

        <MatButton Link="@Constants.Path.Login" Label="Login to account" Outlined="true" />
    </EditForm>
</MatCard>

@code
{
    private RegisterViewModel RegisterModel { get; set; } = new RegisterViewModel();

    private async Task RegisterAsync() => await LoadAsync(() => AccountService.Register(RegisterModel));
}