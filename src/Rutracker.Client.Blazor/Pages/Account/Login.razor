@layout LoginLayout

@inject NavigationManager NavigationManager
@inject IAccountService AccountService
@inject IMatToaster MatToaster

@page "/account/login"

<MatCard>
    <EditForm Model="@LoginModel" OnValidSubmit="@LoginClicked">
        <div class="form-group">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@LoginModel.UserName"
                          Label="User Name"
                          Icon="@MatIconNames.Person"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true" />
        </div>

        <div class="form-group">
            <MatTextField @bind-Value="@LoginModel.Password"
                          Label="Password"
                          Icon="@MatIconNames.Lock_open"
                          IconTrailing="true"
                          FullWidth="true"
                          Required="true"
                          type="password" />
        </div>

        <div class="form-group text-right">
            <MatCheckbox @bind-Checked="@LoginModel.RememberMe" Label="Remember Me ?" class="filled-in chk-col-blue" />
            <MatButton Raised="true" Label="Login" type="submit" />
        </div>

        <hr />

        <MatButton Link="@Constants.Path.Register" Outlined="true" Label="Create account" />
    </EditForm>
</MatCard>

@code
{
    private LoginViewModel LoginModel { get; set; } = new LoginViewModel();

    private async Task LoginClicked()
    {
        try
        {
            await AccountService.Login(LoginModel);

            NavigationManager.NavigateTo(Constants.Path.Home);
        }
        catch (Exception ex)
        {
            MatToaster.Add(ex.Message, MatToastType.Warning);
        }
    }
}